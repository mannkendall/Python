# Created October 2020; F.P.A. Vogt; frederic.vogt@alumni.anu.edu.au
# This will build the docs and push them to the gh-pages branch of the repo
# Assumes a few things: 1) docs live in ./docs; 2) there is a doc_build.sh bash script that takes
# the ./docs/source/ material and turn it into a compiled ./docs/build read docs; 3) the content of
# the ./docs/build/ folder are published as-is in a gh-pages branch of the repo, with only
# .nojekyll, .gitignore, and .git (folder) in addition.
#
# This workflow will only run if the docs were actually modified in the push request.

name: CI_docs_publish

on:
  push:
    branches: [ master ]
    # Publish docs it was modified
    #paths:
    #  - 'docs/**'
    #  - 'VERSION'
  # For dev purposes, doing it on PR helps a lot
  #pull_request:
  #  branches: [ master ]

jobs:
  docs:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      # Checkout our repository
      - name: Checkout current repository
        uses: actions/checkout@v2

      # Also check out the live docs, placing it into a pseudo "build" folder for the docs
      - name: Checkout live docs
        uses: actions/checkout@v2
        with:
            repository: mannkendall/Python
            ref: gh-pages
            path: './docs/build/'

      # Now let's cleaneup the existing docs, keeping the import .git info intact.
      - name: Clean-up the old docs
        run: |
          cd ./docs/build/
          find . -not \( -path '*.git*' -o -name '.nojekyll' -o -name '.-gitignore' \) -delete
          cd ../..

      # Set up Python
      - uses: actions/setup-python@v2
      # The following should be temporary ... right now, the default goes to 3.9, but many wheels
      # are still missing for this version.
        with:
            python-version: '3.8'

      # Install any dependency we require
      - name: Install dependancies
        run: |
          python -m pip install --upgrade pip
          pip install sphinx
          pip install sphinx-rtd-theme
        shell: bash

      # Here, let's install our module to make sure all the dependencies specified in setup.py are
      # also installed
      - name: Install our module
        run: pip install -e .[dev]
        shell: bash

      # Compile the docs.
      - name: Compile the docs from scratch
        run: |
          cd ./docs
          sh build_docs.sh
        shell: bash

      # Add/Commit the modified docs, and push it back to the branch
      - name: Upload new docs to gh-pages
        run: |
          cd ./docs/build
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add -A .
          git commit -m "CI auto-update of the docs on `date +'%Y-%m-%d %H:%M:%S'`"
          git push origin gh-pages
